#+TITLE: Web of Things OSS Tools
#+AUTHOR: Pedram Hadjian

* Vision

The Web of Things enables us to represent operational digital twins in an interoperable way. The main problem for IoT developers is the access to and understanding of data. Data in the context of IoT can broadly be split into two different categories:

1. Timeseries Data: data coming from sensors, oftentimes called signals, runtime data, samples or others

2. Contextual Data: this type of data answers questions about types of devices, interpretation of timeseries values, topology of assets and locations, taxonomies and more. Sometimes this type of data is called the semantics or metadata.

We do not have a consistent way to work with these kinds of data. While normal application developers happily whip out VSCode, IntelliJ, emacs or vim, install a language server and make use of a myriad of libraries to get things done, IoT developers struggle to even access and understand data, let alone deliver value on top of it.

In this open source project, we set out to change this. The vision is to bridge the gap between the two scenarios. We will focus on the developer experience and if we succeed, an IoT developer will be able to create or better just fetch device twins, model the context, write code and deploy to production.

The vision is grand, but we need to start small. The open source [[https://github.com/eclipse/editdor][ediTDor]] project, published at the Eclipse Foundation, helps to write and syntactically validate TMs/TDs. We will pick this up and drive it towards an fully-featured Digital Twin development environment.

* Target Audience

/IoT Developer/ is a very abstract role and for many an over-simplification. There are developers who create protocol driver code, experts who are knowledgeable about a domain, ontologists, application developers, system integrators, OT developers etc.

In a large corporation, these roles might be well organized and fulfilled by different people. However, an equally valid scenario is that a small team of cross-functional developers and integrators are responsible for providing access to devices, building up the infrastructure and write the application to implement a vertical solution. 

Oftentimes such teams receive input from the roles mentioned above and can use Thing Descriptions to formalize the gathered information in a machine-readable format.

We will target this full-stack IoT developer role at first, as it is still possible to expand target scenarios to distinct roles afterwards.

* High Level Workflow

The diagram below depicts a high-level workflow for working with Thing Models/Thing Descriptions. This will help us to map existing components into the picture and identify gaps, which need to be filled.

[[../media/wot-workflow.drawio.svg]]
